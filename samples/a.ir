; ModuleID = 'sortBubble'
source_filename = "sortBubble"

@I = global i32 0
@J = global i32 0
@TEMP = global i32 0
@X = global [21 x i32] zeroinitializer

declare i32 @writeln(i32)

declare i32 @readln(i32*)

define i32 @main() {
entry:
  store i32 0, i32* @I
  br label %condition

functionReturn:                                   ; preds = %after_loop36
  ret i32 0

condition:                                        ; preds = %loop, %entry
  %I = load i32, i32* @I
  %"loopcond_cur<=endval" = icmp sle i32 %I, 20
  br i1 %"loopcond_cur<=endval", label %loop, label %after_loop

loop:                                             ; preds = %condition
  %I1 = load i32, i32* @I
  %0 = sub i32 %I1, 0
  %1 = getelementptr [21 x i32], [21 x i32]* @X, i32 0, i32 %0
  %I2 = load i32, i32* @I
  %sub = sub i32 20, %I2
  store i32 %sub, i32* %1
  %I3 = load i32, i32* @I
  %"next val in iteration" = add i32 %I3, 1
  store i32 %"next val in iteration", i32* @I
  br label %condition

after_loop:                                       ; preds = %condition
  store i32 0, i32* @I
  br label %condition4

condition4:                                       ; preds = %loop5, %after_loop
  %I7 = load i32, i32* @I
  %"loopcond_cur<=endval8" = icmp sle i32 %I7, 20
  br i1 %"loopcond_cur<=endval8", label %loop5, label %after_loop6

loop5:                                            ; preds = %condition4
  %I9 = load i32, i32* @I
  %2 = sub i32 %I9, 0
  %3 = getelementptr [21 x i32], [21 x i32]* @X, i32 0, i32 %2
  %4 = load i32, i32* %3
  %5 = call i32 @writeln(i32 %4)
  %I10 = load i32, i32* @I
  %"next val in iteration11" = add i32 %I10, 1
  store i32 %"next val in iteration11", i32* @I
  br label %condition4

after_loop6:                                      ; preds = %condition4
  store i32 1, i32* @I
  br label %condition12

condition12:                                      ; preds = %after_loop19, %after_loop6
  %I15 = load i32, i32* @I
  %"loopcond_cur<=endval16" = icmp sle i32 %I15, 20
  br i1 %"loopcond_cur<=endval16", label %loop13, label %after_loop14

loop13:                                           ; preds = %condition12
  store i32 20, i32* @J
  br label %condition17

after_loop14:                                     ; preds = %condition12
  store i32 0, i32* @I
  br label %condition34

condition17:                                      ; preds = %after_if, %loop13
  %J = load i32, i32* @J
  %I20 = load i32, i32* @I
  %"loopcond_cur>=endval" = icmp sge i32 %J, %I20
  br i1 %"loopcond_cur>=endval", label %loop18, label %after_loop19

loop18:                                           ; preds = %condition17
  %J21 = load i32, i32* @J
  %6 = sub i32 %J21, 0
  %7 = getelementptr [21 x i32], [21 x i32]* @X, i32 0, i32 %6
  %8 = load i32, i32* %7
  %J22 = load i32, i32* @J
  %sub23 = sub i32 %J22, 1
  %9 = sub i32 %sub23, 0
  %10 = getelementptr [21 x i32], [21 x i32]* @X, i32 0, i32 %9
  %11 = load i32, i32* %10
  %less = icmp slt i32 %8, %11
  %12 = zext i1 %less to i32
  %"ifcond-if_EQ_1 - iftrue" = icmp eq i32 %12, 1
  br i1 %"ifcond-if_EQ_1 - iftrue", label %then, label %else

after_loop19:                                     ; preds = %condition17
  %I32 = load i32, i32* @I
  %"next val in iteration33" = add i32 %I32, 1
  store i32 %"next val in iteration33", i32* @I
  br label %condition12

then:                                             ; preds = %loop18
  %J24 = load i32, i32* @J
  %sub25 = sub i32 %J24, 1
  %13 = sub i32 %sub25, 0
  %14 = getelementptr [21 x i32], [21 x i32]* @X, i32 0, i32 %13
  %15 = load i32, i32* %14
  store i32 %15, i32* @TEMP
  %J26 = load i32, i32* @J
  %sub27 = sub i32 %J26, 1
  %16 = sub i32 %sub27, 0
  %17 = getelementptr [21 x i32], [21 x i32]* @X, i32 0, i32 %16
  %J28 = load i32, i32* @J
  %18 = sub i32 %J28, 0
  %19 = getelementptr [21 x i32], [21 x i32]* @X, i32 0, i32 %18
  %20 = load i32, i32* %19
  store i32 %20, i32* %17
  %J29 = load i32, i32* @J
  %21 = sub i32 %J29, 0
  %22 = getelementptr [21 x i32], [21 x i32]* @X, i32 0, i32 %21
  %TEMP = load i32, i32* @TEMP
  store i32 %TEMP, i32* %22
  br label %after_if

else:                                             ; preds = %loop18
  br label %after_if

after_if:                                         ; preds = %else, %then
  %J30 = load i32, i32* @J
  %"next val in iteration31" = add i32 %J30, -1
  store i32 %"next val in iteration31", i32* @J
  br label %condition17

condition34:                                      ; preds = %loop35, %after_loop14
  %I37 = load i32, i32* @I
  %"loopcond_cur<=endval38" = icmp sle i32 %I37, 20
  br i1 %"loopcond_cur<=endval38", label %loop35, label %after_loop36

loop35:                                           ; preds = %condition34
  %I39 = load i32, i32* @I
  %23 = sub i32 %I39, 0
  %24 = getelementptr [21 x i32], [21 x i32]* @X, i32 0, i32 %23
  %25 = load i32, i32* %24
  %26 = call i32 @writeln(i32 %25)
  %I40 = load i32, i32* @I
  %"next val in iteration41" = add i32 %I40, 1
  store i32 %"next val in iteration41", i32* @I
  br label %condition34

after_loop36:                                     ; preds = %condition34
  br label %functionReturn
}
